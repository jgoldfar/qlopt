import numpy as np

def format_data(v, noise):
    N = v.size
    odd = np.mod(N,2)
    v = np.sort(v)

    median = np.median(v)
    twentyfifth = np.percentile(v, 25)
    seventyfifth = np.percentile(v, 75)
    
    iqr = seventyfifth - twentyfifth
    upper_whisker = v[v<=seventyfifth+1.5*iqr].max()
    lower_whisker = v[v>=twentyfifth-1.5*iqr].min()
    
    outliers = np.append(v[v>=seventyfifth+1.5*iqr],v[v<=twentyfifth-1.5*iqr])
    
    #index median box_top box_bottom whisker_top whisker_bottom
    print("\\addplot+[boxplot prepared={"
        "draw position=",noise, 
        ",\n\tlower whisker=", lower_whisker, 
        ",\n\tlower quartile=", twentyfifth,
        ",\n\tmedian=", median,
        ",\n\tupper quartile=", seventyfifth, 
        ",\n\tupper whisker=", upper_whisker,
        "\n}]\ntable[row sep=\\\\,y index=0]{\n\t",
        '\\\\ '.join(str(i) for i in outliers)  ,
        "\\\n};",
        "\n\tcoordinates {};", sep="") 

v2 = np.array(np.mat(
'1.059046  1.081978 0.9852327   1.10152  1.010592  1.027412  1.050178  1.011586  1.130314  1.254196  1.080796  1.088756  1.216737  1.118074 0.9987037 0.9975468 0.9855514 0.9590006  1.009646  1.011394  1.053443 0.9439927  1.073968  1.161174  1.004858  1.097135  1.050037 0.9688115 0.9808019 0.9980769  1.073872  1.039789  1.111851 0.9880749  1.129116  1.106271   1.01526   0.96177  1.140965  1.077681    1.1409  1.029888  1.145642  1.139545  1.014292  1.062251  1.056692  1.008888 0.9830265 0.9990622  1.026347  1.073173  1.099052 0.9930044  1.056764 0.9841037  1.017736 0.9980005 0.9970307 0.9868421  1.073579   1.10786  1.199576  1.112769  1.102477 0.9549691 0.9300217  1.043452  1.009345  1.067123  1.043376  1.002828  1.097586 0.9854398  1.047386  1.018559 0.9443489  1.014644  1.120814 0.9805993 0.9831278  0.998551  1.036108  1.035098 0.9781934  1.056065  1.058363  1.076789   1.08304  1.051769  1.086836 0.9362454 0.9502017  1.069452  1.015383  1.066239  1.016999  1.161691  1.048799  1.035146;1.211326  1.015457  1.078796 0.8511268  1.356868  1.070138 0.9812102  1.083166  1.097972 0.9953464  1.210796  1.233553  1.172058 0.9270275  1.341569  1.141449  1.174496 0.9934652  1.101933  1.085462  1.067199  1.086416  1.110827  1.245127 0.9731529  1.251582 0.8932627  1.023188   1.07522 0.8620923 0.9867073 0.8844514  1.112201  1.094814 0.6685034  1.170429   1.14123 0.9012206  1.230894  1.013693 0.9665696  1.310717  1.398871  1.101429  1.444246  1.129932   1.19242 0.9838254  1.148003  1.054514  1.394245 0.8536176 0.9826819  1.005057  1.315053 0.8056632  1.061001  1.140025 0.9689266  1.145491 0.9964427  1.004065 0.8858471  1.139191  1.079794  1.175842  1.253403 0.9080638 0.8037968  1.044035  1.061906  1.138713  1.072966 0.8080272   1.26292  1.101667  0.803662  1.110331  1.079407  1.120444  1.200243 0.9305893  1.055441   0.99731  1.066304  1.051953  1.288122 0.9746172  1.073425 0.8877489  1.194107  1.066361  1.126739 0.9601547  1.148769  1.129849  1.272288 0.9871517 0.9755267  1.131102;1.260211  1.241259  1.097218  1.469176  1.128236  1.420719 0.9609265  1.101138  1.108365 0.9560549    1.1592 0.7424461  1.278576 0.9303283 0.5854864 0.8079812  1.118687 0.5778462  1.278799 0.9462727  1.457526  1.277618  1.230245 0.9598123 0.9286001 0.9386076 0.8164788  1.314033  1.413589 0.9835164  1.528645   1.44186  1.124858  1.074293   1.23527   0.98233  1.082628  1.065223  1.098268  1.056069  1.114613  0.894102  1.038406 0.9992051   1.04897 0.8836195  1.080833 0.9285382 0.8674639 0.9368353  1.047743 0.9654988  1.269242  1.264106 0.9569349 0.9838842  1.018111  1.238347 0.9780186  1.186597  1.181628 0.9490481  1.011649 0.8515825  1.346017  1.259843 0.9865002 0.9394588 0.8970131 0.8499671  1.164702  1.308297  1.374193  1.175547 0.6473105 0.8830341  1.466029 0.6563506 0.8935196  1.253965  1.282333 0.9473785  1.189626  1.094647 0.9445051  1.252893  1.108763 0.7490793  1.072119  1.134425 0.9992861  1.113122 0.9689201  1.010198 0.9596703 0.6452248  1.122896  1.001273  1.054427  1.114693;0.8150078 0.8173661  1.180361  1.452326  1.149073  1.020489 0.6569033 0.9860416  1.058592 0.9154915 0.8654664  1.432736  1.162969  1.112595 0.8110653   1.06512  1.046971  1.077368  1.009852  1.418651 0.9789101 0.8322115 0.8904542 0.6357242  1.141438  0.874973  1.027416  1.437052  1.581543   1.41418 0.5844839 0.7757043 0.9500028 0.9152825  1.327656  1.126472 0.7585333  1.158889  1.033188 0.6588772  1.128433  1.437855  1.211045  1.061485 0.9610179  1.583299  1.253105 0.9808889 0.7554294 0.8129741  1.503313  1.334501 0.8722567 0.8048929  1.042808  1.238172 0.9496559 0.6827021  1.150782  0.795279  1.409075  1.007557 0.2803245  1.256302 0.6881414 0.7454217  1.360701  1.377019  1.165748 0.7681771  1.166366 0.1509304 0.2646388   1.32001 0.8907983  1.085529 0.4264647 0.5899699   1.32513  1.080948  1.553438 0.9087363  1.469989  1.044975 0.7868842  1.413741 0.9276619 0.9596352  1.636996  1.194224  1.513095  1.143614  1.307656 0.9650176  1.079953 0.7652577 0.9834442  1.145707  1.545247  1.026505;0.9491286   1.81749  1.430336  1.092862  0.724807 0.8636655 0.9493011 0.7095488  1.151623 0.7486519 0.9409176  1.148619  0.919229 0.8285814 0.7993929 0.5798948  1.053876 0.8735306 0.6063274  1.005212 0.3682565 0.6549453  1.134824 0.6450494  1.403607  1.206531  1.529362  1.179063 0.8777364  1.019717  1.262102 0.7431431   1.27297  1.480766  1.162907  1.172171 0.8347558 0.5681775 0.3456317  1.000137  1.531146   1.06406  1.255204  1.278514  1.259575  1.328525  1.125681 0.5097242 0.6002858 0.8285945 0.7993405  1.664401  1.059566 0.8628148  1.290707  1.180352 0.7314659  1.346424  1.128581 0.7995845 0.9868233  1.920939  1.178538  1.678034  0.872561  0.918023  1.447078   1.15295  1.313258 0.9980704  1.146468   1.49562  1.465645  1.654934  1.420055 0.6564468  1.105009  1.384464  1.088347  1.502858  1.463636 0.4705852 0.8955374 0.6070796 0.9762342  1.354052 0.9734164 0.8593387 0.9401511  1.133957  1.439269  1.063443  1.516911  0.369883 0.9727619 0.9578959  1.242111  1.270062  0.376527  1.338333'
));

for i in range(v2.shape[0]):
    format_data(v2[i,:], i+1)
    